apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: prod-gcp-alerts
  namespace: helsearbeidsgiver
  labels:
    team: helsearbeidsgiver
spec:
  groups:
    - name: prod-gcp-alerts
      rules:
        - alert: app-nede
          expr: kube_deployment_status_replicas_available{namespace="helsearbeidsgiver"} == 0
          for: 2m
          annotations:
            consequence: '*{{ $labels.deployment }}* er nede!'
            action: "`kubectl describe pod <podname>` -> `kubectl logs <podname>`"
          labels:
            namespace: helsearbeidsgiver # required
            severity: critical
        - alert: kontinuerlig-restart
          expr: sum(increase(kube_pod_container_status_restarts_total{namespace="helsearbeidsgiver"}[30m])) by (container) > 2
          for: 5m
          annotations:
            consequence: '*{{ $labels.pod }}* restarter for ofte'
            action: "`kubectl describe pod <podname>` -> `kubectl logs <podname>`"
          labels:
            namespace: helsearbeidsgiver # required
            severity: warning
        - alert: mange-feil
          expr: (100 * sum by (log_app, log_namespace) (rate(logd_messages_total{log_namespace="helsearbeidsgiver",log_level=~"Error"}[3m])) / sum by (log_app, log_namespace) (rate(logd_messages_total{log_namespace="helsearbeidsgiver"}[3m]))) > 10
          for: 5m
          annotations:
            consequence: '*{{ $labels.app }}* logger mange feil'
            action: "`kubectl describe pod {{ $labels.pod }}` -> `kubectl logs {{ $labels.pod }}`"
          labels:
            namespace: helsearbeidsgiver # required
            severity: warning
        - alert: mange-warnings
          expr: (100 * sum by (log_app, log_namespace) (rate(logd_messages_total{log_namespace="helsearbeidsgiver",log_level=~"Warning"}[3m])) / sum by (log_app, log_namespace) (rate(logd_messages_total{log_namespace="helsearbeidsgiver"}[3m]))) > 10
          for: 5m
          annotations:
            consequence: '*{{ $labels.app }}* logger mange warnings'
            action: "`kubectl describe pod {{ $labels.pod }}` -> `kubectl logs {{ $labels.pod }}`"
          labels:
            namespace: helsearbeidsgiver # required
            severity: warning
        - alert: ConsumerLag
          expr: sum(kafka_consumergroup_group_lag{group=~"^helsearbeidsgiver.*"}) by (group, topic) > 100
          for: 15m
          annotations:
            consequence: 'Consumer med groupid *{{ $labels.group }}* har mye lag mot Kafka på topic *{{ $labels.topic }}*'
            action: 'Undersøk hvorfor appen ikke holder følge med Kafka.'
          labels:
            namespace: helsearbeidsgiver
            severity: warning
